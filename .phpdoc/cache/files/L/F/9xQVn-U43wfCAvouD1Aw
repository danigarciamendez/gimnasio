1639532135
AwuilbDvXz%3Ab2488cd1de539dda45d883a340041fc6-ce01bf934918c1a3455823a1d8497a45
s:37880:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"ce01bf934918c1a3455823a1d8497a45";s:39:" phpDocumentor\Reflection\Php\File name";s:22:"ReservasController.php";s:39:" phpDocumentor\Reflection\Php\File path";s:36:"controladores/ReservasController.php";s:41:" phpDocumentor\Reflection\Php\File source";s:19671:"<?php
session_start();


/**
 * Controlador de la página de entrada al portal desde la que se pueden hacer las funciones que te permita tu rol
 */

 /**
 * Incluimos todos los modelos que necesite este controlador
 */

require_once MODELS_FOLDER . 'UserModel.php';
require_once MODELS_FOLDER . 'TramosModel.php';
require_once MODELS_FOLDER . 'TramoUsuarioModel.php';
require_once MODELS_FOLDER . 'MessageModel.php';

class ReservasController extends BaseController
{
   public function __construct()
   {
      parent::__construct();
   }
   
   // Entrar en la página reservas 
   public function reservas()
   {
      if($_SESSION["verificado"]){
         $horario = new TramosModel();
         $horario = $horario->listadoHorario();
         $horario = $horario["datos"];
         $mensajes = new MessageModel();
         $datos = $mensajes->contarMensajes($_SESSION["id"]);
         $_SESSION["nMen"]  = $datos["datos"];
         
         $parametros = [
            "tituloventana" => "Reservas",
            "horario" => $horario
            
         ];
         $this->view->show("reservas", $parametros);

      }else{
         $this->redirect("Index","index");
      }
   }

   // Reservar una actividad
   public function reservarActividad()
   {
      if($_SESSION["verificado"]){
         $horario = new TramosModel();
         $horario = $horario->listadoHorario();
         $horario = $horario["datos"];
         $mensajes = new MessageModel();
         $datos = $mensajes->contarMensajes($_SESSION["id"]);
         $_SESSION["nMen"]  = $datos["datos"];
         
         $id_tramo = $_GET['id']; // id del tramo
         $tramo = new TramosModel();
         $tramo = $tramo->info_tramo($id_tramo);
         $tramo = $tramo["datos"];

         $dia = $tramo[0]["dia"]; // Saber el dia para insertar fecha_actividad

         $id_usuario = $_SESSION["id"]; // id del usuario
         $tramo_usuario = new TramosModel();
         $tramo_usuario = $tramo_usuario->comprobarReserva($id_tramo,$id_usuario);
         $validar = $tramo_usuario["correcto"];
         $fecha_actual = date("Y/m/d",strtotime( "Now" ));


         $tramo_usuario_ins = new TramoUsuarioModel();
         if($validar){ // Se puede realizar la reserva
            if($dia == "Lunes"){
               
               $fecha_actividad = date("Y/m/d",strtotime( "Monday this week" ));

               if($fecha_actividad<$fecha_actual){ // Comprobar si ha pasado ya el tramo de actividad o no
                  
                  $insert = $tramo_usuario_ins->add_tramo_usuario($id_tramo,$id_usuario,$fecha_actividad,$fecha_actual);

                  if($insert["correcto"]){
                     $this->mensajes[] = [
                        "tipo" => "success",
                        "mensaje" => " Reserva realizada correctamente. <br/>"
                     ];
                  }else{
                     $this->mensajes[] = [
                        "tipo" => "danger",
                        "mensaje" => " No se ha podido realizar la reserva. <br/>"
                     ];
                  }
               }else{
                  $this->mensajes[] = [
                     "tipo" => "danger",
                     "mensaje" => "Ya ha pasado esta sesión. <br/>"
                  ];
               }
               
            }else if($dia == "Martes"){
               $fecha_actividad = date("d/m/y",strtotime( "Tuesday this week" ));

               if($fecha_actividad<$fecha_actual){ // Comprobar si ha pasado ya el tramo de actividad o no
                  
                $insert = $tramo_usuario_ins->add_tramo_usuario($id_tramo,$id_usuario,$fecha_actividad,$fecha_actual);
                  
                  if($insert["correcto"]){
                     $this->mensajes[] = [
                        "tipo" => "success",
                        "mensaje" => " Reserva realizada correctamente. <br/>"
                     ];
                  }else{
                     $this->mensajes[] = [
                        "tipo" => "danger",
                        "mensaje" => " No se ha podido realizar la reserva. <br/>"
                     ];
                  }
               }else{
                  $this->mensajes[] = [
                     "tipo" => "danger",
                     "mensaje" => "Ya ha pasado esta sesión. <br/>"
                  ];
               }
            }else if($dia == "Miercoles"){
               $fecha_actividad = date("d/m/y",strtotime( "Wednesday this week" ));

               if($fecha_actividad<$fecha_actual){ // Comprobar si ha pasado ya el tramo de actividad o no
                  
                $insert = $tramo_usuario_ins->add_tramo_usuario($id_tramo,$id_usuario,$fecha_actividad,$fecha_actual);
                  
                  if($insert["correcto"]){
                     $this->mensajes[] = [
                        "tipo" => "success",
                        "mensaje" => " Reserva realizada correctamente. <br/>"
                     ];
                  }else{
                     $this->mensajes[] = [
                        "tipo" => "danger",
                        "mensaje" => " No se ha podido realizar la reserva. <br/>"
                     ];
                  }
               }else{
                  $this->mensajes[] = [
                     "tipo" => "danger",
                     "mensaje" => "Ya ha pasado esta sesión. <br/>¡"
                  ];
               }
            }else if($dia == "Jueves"){
               $fecha_actividad = date("d/m/y",strtotime( "Thursday this week" ));

               if($fecha_actividad<$fecha_actual){ // Comprobar si ha pasado ya el tramo de actividad o no
                  
                $insert = $tramo_usuario_ins->add_tramo_usuario($id_tramo,$id_usuario,$fecha_actividad,$fecha_actual);
                  
                  if($$insert["correcto"]){
                     $this->mensajes[] = [
                        "tipo" => "success",
                        "mensaje" => " Reserva realizada correctamente. <br/>"
                     ];
                  }else{
                     $this->mensajes[] = [
                        "tipo" => "danger",
                        "mensaje" => " No se ha podido realizar la reserva. <br/>"
                     ];
                  }
               }else{
                  $this->mensajes[] = [
                     "tipo" => "danger",
                     "mensaje" => "Ya ha pasado esta sesión. <br/>"
                  ];
               }
            }else if($dia == "Viernes"){
               $fecha_actividad = date("d/m/y",strtotime( "Friday this week" ));

               if($fecha_actividad<$fecha_actual){ // Comprobar si ha pasado ya el tramo de actividad o no
                  
                $insert = $tramo_usuario_ins->add_tramo_usuario($id_tramo,$id_usuario,$fecha_actividad,$fecha_actual);
                  
                  if($$insert["correcto"]){
                     $this->mensajes[] = [
                        "tipo" => "success",
                        "mensaje" => " Reserva realizada correctamente. <br/>"
                     ];
                  }else{
                     $this->mensajes[] = [
                        "tipo" => "danger",
                        "mensaje" => " No se ha podido realizar la reserva. <br/>"
                     ];
                  }
               }else{
                  $this->mensajes[] = [
                     "tipo" => "danger",
                     "mensaje" => "Ya ha pasado esta sesión. <br/>"
                  ];
               }
            }else if($dia == "Sabado"){
               $fecha_actividad = date("d/m/y",strtotime( "Saturday this week" ));

               if($fecha_actividad<$fecha_actual){ // Comprobar si ha pasado ya el tramo de actividad o no
                  
                $insert = $tramo_usuario_ins->add_tramo_usuario($id_tramo,$id_usuario,$fecha_actividad,$fecha_actual);
                  
                  if($$insert["correcto"]){
                     $this->mensajes[] = [
                        "tipo" => "success",
                        "mensaje" => " Reserva realizada correctamente. <br/>"
                     ];
                  }else{
                     $this->mensajes[] = [
                        "tipo" => "danger",
                        "mensaje" => " No se ha podido realizar la reserva. <br/>"
                     ];
                  }
               }else{
                  $this->mensajes[] = [
                     "tipo" => "danger",
                     "mensaje" => "Ya ha pasado esta sesión. <br/>"
                  ];
               }
            }


            
         }else{
            $this->mensajes[] = [
               "tipo" => "danger",
               "mensaje" => "Ya se ha realizado esta reserva. <br/>"
            ];
         }


         $parametros = [
            "tituloventana" => "Reservas",
            "horario" => $horario,
            "mensajes" => $this->mensajes
         ];
         $this->view->show("reservas", $parametros);

      }else{
         $this->redirect("Index","index");
      }
   }
   // Entrar en la página de mis reservas 
   public function misReservas()
   {
      if($_SESSION["verificado"]){
        $mensajes = new MessageModel();
        $datos = $mensajes->contarMensajes($_SESSION["id"]);
        $_SESSION["nMen"]  = $datos["datos"];
        $tramos_usuarios = new TramoUsuarioModel();
        $regsxpag = (isset($_GET['regsxpag']))? (int)$_GET['regsxpag']:2;
        //Establecemos la página que vamos a mostrar, por página,por defecto la 1
        $pagina = (isset($_GET['pagina']))? (int)$_GET['pagina']:1;
       
        //Definimos la variable $inicio que indique la posición del registro desde el que se
        // mostrarán los registros de una página dentro de la paginación.
        $offset= ($pagina>1)? (($pagina - 1)*$regsxpag): 0;
        //SQL_CALC_FOUND_ROWS está siendo depreciado en MySQL
        //Vamos a usar COUNT en su lugar
        //Calculamos el número de registros obtenidos
        $totalregistros= $tramos_usuarios->totalReg($_SESSION["id"]);
        $totalregistros = $totalregistros['datos'];  
        $totalregistros = $totalregistros[0]["total"];
        
        //Determinamos el número de páginas de la que constará mi paginación
        $numpaginas=ceil($totalregistros/$regsxpag);

         $resultModelo =  $tramos_usuarios->listado_tramo_usuario($_SESSION["id"],$regsxpag,$offset);
         
         
         
         $parametros = [
            "tituloventana" => "Mis reservas",
            "datos" => $resultModelo["datos"],
            "numpaginas" => $numpaginas,
            "totalregistros" => $totalregistros,
            "pagina" => $pagina,
            "regsxpag" => $regsxpag
            
         ];
         $this->view->show("misReservas", $parametros);

      }else{
         $this->redirect("Index","index");
      }
   }

   public function buscarTramoUsuario(){
    if($_SESSION["verificado"]){
       if(isset($_POST["columnaBuscar"])){
          if($_POST["columnaBuscar"] =="actividad"){
             $dato = $_POST["datoBuscar"];
             $id_usuario = $_SESSION["id"];
             $tramos = new TramoUsuarioModel();
             $regsxpag = (isset($_GET['regsxpag']))? (int)$_GET['regsxpag']:2;
            //Establecemos la página que vamos a mostrar, por página,por defecto la 1
            $pagina = (isset($_GET['pagina']))? (int)$_GET['pagina']:1;
        
            //Definimos la variable $inicio que indique la posición del registro desde el que se
            // mostrarán los registros de una página dentro de la paginación.
            $offset= ($pagina>1)? (($pagina - 1)*$regsxpag): 0;
            //SQL_CALC_FOUND_ROWS está siendo depreciado en MySQL
            //Vamos a usar COUNT en su lugar
            //Calculamos el número de registros obtenidos
            $totalregistros= $tramos->totalReg($_SESSION["id"]);
            $totalregistros = $totalregistros['datos'];  
            $totalregistros = $totalregistros[0]["total"];
            
            //Determinamos el número de páginas de la que constará mi paginación
            $numpaginas=ceil($totalregistros/$regsxpag);
            $resultModelo = $tramos->buscarTramoUsuarioNombre($id_usuario,$dato, $regsxpag,$offset);
 
             if ($resultModelo["correcto"]) :
                $parametros["datos"] = $resultModelo["datos"];
                //Definimos el mensaje para el alert de la vista de que todo fue correctamente
                
             else :
                //Definimos el mensaje para el alert de la vista de que se produjeron errores al realizar el listado
                $this->mensajes[] = [
                   "tipo" => "danger",
                   "mensaje" => "El listado no pudo realizarse correctamente!! :( <br/>({$resultModelo["error"]})"
                ];
             endif;
    
             $parametros = [
                "tituloventana" => "Mis reservas",
                
                "datos" =>  $resultModelo["datos"],
                "numpaginas" => $numpaginas,
                "totalregistros" => $totalregistros,
                "pagina" => $pagina,
                "regsxpag" => $regsxpag
             ];
             $this->view->show("MisReservas", $parametros);
             
             
          }else if($_POST["columnaBuscar"] == "fecha_actividad"){
             $dato = $_POST["datoBuscar"];
             $id_usuario = $_SESSION["id"];
             $tramos = new TramoUsuarioModel();
             $regsxpag = (isset($_GET['regsxpag']))? (int)$_GET['regsxpag']:2;
            //Establecemos la página que vamos a mostrar, por página,por defecto la 1
            $pagina = (isset($_GET['pagina']))? (int)$_GET['pagina']:1;
        
            //Definimos la variable $inicio que indique la posición del registro desde el que se
            // mostrarán los registros de una página dentro de la paginación.
            $offset= ($pagina>1)? (($pagina - 1)*$regsxpag): 0;
            //SQL_CALC_FOUND_ROWS está siendo depreciado en MySQL
            //Vamos a usar COUNT en su lugar
            //Calculamos el número de registros obtenidos
            $totalregistros= $tramos_usuarios->totalReg($_SESSION["id"]);
            $totalregistros = $totalregistros['datos'];  
            $totalregistros = $totalregistros[0]["total"];

             $resultModelo = $tramos->buscarTramoUsuarioFecha($dato,$regsxpag,$offset);
 
             if ($resultModelo["correcto"]) :
                $parametros["datos"] = $resultModelo["datos"];
                //Definimos el mensaje para el alert de la vista de que todo fue correctamente
                
             else :
                //Definimos el mensaje para el alert de la vista de que se produjeron errores al realizar el listado
                $this->mensajes[] = [
                   "tipo" => "danger",
                   "mensaje" => "El listado no pudo realizarse correctamente!! :( <br/>({$resultModelo["error"]})"
                ];
             endif;
    
             $parametros = [
                "tituloventana" => "Mis reservas",
                
                "datos" =>  $resultModelo["datos"],
                "numpaginas" => $numpaginas,
                "totalregistros" => $totalregistros,
                "pagina" => $pagina,
                "regsxpag" => $regsxpag
             ];
             $this->view->show("MisReservas", $parametros);
          }else{
            $id_usuario = $_SESSION["id"];
            $tramos = new TramoUsuarioModel();
            $regsxpag = (isset($_GET['regsxpag']))? (int)$_GET['regsxpag']:2;
            //Establecemos la página que vamos a mostrar, por página,por defecto la 1
            $pagina = (isset($_GET['pagina']))? (int)$_GET['pagina']:1;
        
            //Definimos la variable $inicio que indique la posición del registro desde el que se
            // mostrarán los registros de una página dentro de la paginación.
            $offset= ($pagina>1)? (($pagina - 1)*$regsxpag): 0;
            //SQL_CALC_FOUND_ROWS está siendo depreciado en MySQL
            //Vamos a usar COUNT en su lugar
            //Calculamos el número de registros obtenidos
            $totalregistros= $tramos->totalReg($_SESSION["id"]);
            $totalregistros = $totalregistros['datos'];  
            $totalregistros = $totalregistros[0]["total"];
            
            //Determinamos el número de páginas de la que constará mi paginación
            $numpaginas=ceil($totalregistros/$regsxpag);
            $resultModelo = $tramos->listado_tramo_usuario($id_usuario, $regsxpag,$offset);

            if ($resultModelo["correcto"]) :
                $parametros["datos"] = $resultModelo["datos"];
                //Definimos el mensaje para el alert de la vista de que todo fue correctamente
                
            else :
                //Definimos el mensaje para el alert de la vista de que se produjeron errores al realizar el listado
                $this->mensajes[] = [
                    "tipo" => "danger",
                    "mensaje" => "El listado no pudo realizarse correctamente!! :( <br/>({$resultModelo["error"]})"
                ];
            endif;
 
          $parametros = [
             "tituloventana" => "Mis revervas",
             
             "datos" =>  $resultModelo["datos"],
             "numpaginas" => $numpaginas,
             "totalregistros" => $totalregistros,
             "pagina" => $pagina,
             "regsxpag" => $regsxpag
          ];
          $this->view->show("MisReservas", $parametros);
       }
    }
    }else{
        $this->redirect("Index","index");
    }
    
}

public function del_tramo_usuario()
    {
       // verificamos que hemos recibido los parámetros desde la vista de listado 
       if (isset($_GET['id']) && (is_numeric($_GET['id']))) {
          $tramo_usuario = new TramoUsuarioModel();
 
          $id_tramoUsuario = $_GET["id"];
          $id_usuario = $_SESSION["id"];
 
          //Realizamos la operación de suprimir el usuario con el id=$id
          $resultModelo = $tramo_usuario->delTramoUsuario($id_tramoUsuario);
          //Analizamos el valor devuelto por el modelo para definir el mensaje a 
          //mostrar en la vista listado
          if ($resultModelo["correcto"]) :
             $this->mensajes[] = [
                "tipo" => "success",
                "mensaje" => "Se eliminó correctamente tu actividad"
             ];
          else :
             $this->mensajes[] = [
                "tipo" => "danger",
                "mensaje" => "La eliminación del usuario no se realizó correctamente!! :( <br/>({$resultModelo["error"]})"
             ];
          endif;
       } else { //Si no recibimos el valor del parámetro $id generamos el mensaje indicativo:
          $this->mensajes[] = [
             "tipo" => "danger",
             "mensaje" => "No se pudo acceder al id del usuario a eliminar!! :("
          ];
       }
       
      //Realizamos el listado de los usuarios
      $this->misReservas();
    }
}

";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:19:"\ReservasController";O:35:"phpDocumentor\Reflection\Php\Class_":11:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:19:"\ReservasController";s:36:" phpDocumentor\Reflection\Fqsen name";s:18:"ReservasController";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:15:"\BaseController";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"BaseController";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:6:{s:34:"\ReservasController::__construct()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:34:"\ReservasController::__construct()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"__construct";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:20;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:31:"\ReservasController::reservas()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:31:"\ReservasController::reservas()";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"reservas";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:26;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:40:"\ReservasController::reservarActividad()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:40:"\ReservasController::reservarActividad()";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"reservarActividad";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:49;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:34:"\ReservasController::misReservas()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:34:"\ReservasController::misReservas()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"misReservas";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:245;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:41:"\ReservasController::buscarTramoUsuario()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:41:"\ReservasController::buscarTramoUsuario()";s:36:" phpDocumentor\Reflection\Fqsen name";s:18:"buscarTramoUsuario";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:289;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:40:"\ReservasController::del_tramo_usuario()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:40:"\ReservasController::del_tramo_usuario()";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"del_tramo_usuario";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:431;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:18;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";